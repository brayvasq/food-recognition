FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	experiencia : REAL;
	formacion : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	salario : REAL;
END_VAR

FUZZIFY experiencia			
	TERM poca := (0, 1) (15, 0) ; 
	TERM media := (0, 0) (15,1) (30,0);
	TERM alta := (15, 0) (30, 1);
END_FUZZIFY

FUZZIFY formacion			
	TERM debil := (0, 1) (7.5, 0) ; 
	TERM normal := (0, 0) (7.5,1) (15,0);
	TERM fuerte := (7.5, 0) (15, 1);
END_FUZZIFY

DEFUZZIFY salario			
	TERM muy_bajo := (0,1) (250,0);
	TERM bajo := (0,0) (250,1) (500,0);
	TERM medio := (250,0) (500,1) (750,0);
	TERM alto := (500,0) (750,1) (1000,0);
	TERM muy_alto := (750,0) (1000,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF formacion IS debil AND experiencia IS poca THEN salario IS muy_bajo;
	RULE 2 : IF formacion IS debil AND experiencia IS media THEN salario IS bajo;
	RULE 3 : IF formacion IS debil AND experiencia IS alta THEN salario IS medio;
	RULE 4 : IF formacion IS normal AND experiencia IS poca THEN salario IS bajo;
	RULE 5 : IF formacion IS normal AND experiencia IS media THEN salario IS medio;
	RULE 6 : IF formacion IS normal AND experiencia IS alta THEN salario IS alto;
	RULE 7 : IF formacion IS fuerte AND experiencia IS poca THEN salario IS medio;
	RULE 8 : IF formacion IS fuerte AND experiencia IS media THEN salario IS alto;
	RULE 9 : IF formacion IS fuerte AND experiencia IS alta THEN salario IS muy_alto;
END_RULEBLOCK

END_FUNCTION_BLOCK
